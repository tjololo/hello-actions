name: Promote release from issue comment

on:
  issues:
    types: [edited]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  promote-release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Release:')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Promote release
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const releaseTag = context.payload.issue.title.split(': ')[1];
            const releaseVersion = releaseTag.replace('test-v', '');
            console.log('Release version:', releaseVersion);
            
            const currentState = context.payload.issue.body;
            // find the checkboxes in the issue body starting with <!-- start-env-list --> and ending with <!-- stop-env-list -->
            const startEnvList = currentState.indexOf('<!-- start-env-list -->');
            const stopEnvList = currentState.indexOf('<!-- stop-env-list -->');
            const envList = currentState.substring(startEnvList + 23, stopEnvList);
            const envListLines = envList.split('\n').map(line => line.trim());
            const lineRegex = /- \[([ x])\] Deploy to (.+)$/;
            const envListCheckboxes = envListLines.map(line => {
              const match = line.match(lineRegex);
              if (match) {
                const checked = match[1] === 'x';
                const env = match[2];
                return { env, checkbox: checked };
              }
              return null;
            }).filter(Boolean);
            // Old checkboxes
            const oldState = context.payload.changes.body.from;
            const oldStartEnvList = oldState.indexOf('<!-- start-env-list -->');
            const oldStopEnvList = oldState.indexOf('<!-- stop-env-list -->');
            const oldEnvList = oldState.substring(oldStartEnvList + 23, oldStopEnvList);
            const oldEnvListLines = oldEnvList.split('\n').map(line => line.trim());
            const oldEnvListCheckboxes = oldEnvListLines.map(line => {
              const match = line.match(lineRegex);
              if (match) {
                const checked = match[1] === 'x';
                const env = match[2];
                return { env, checkbox: checked };
              }
              return null;
            }).filter(Boolean);
            console.log('Old env list checkboxes:', oldEnvListCheckboxes);
            console.log('New env list checkboxes:', envListCheckboxes);
            // List environments newly checked
            const newCheckedEnvs = envListCheckboxes.filter(env => env.checkbox === true);
            const oldCheckedEnvs = oldEnvListCheckboxes.filter(env => env.checkbox === true);
            const newlyCheckedEnvs = newCheckedEnvs.filter(env => !oldCheckedEnvs.some(oldEnv => oldEnv.env === env.env));
            if (newlyCheckedEnvs.length === 0) {
              console.log('No new environments checked.');
              return;
            }
            // Update releases config file and create new Pull Request
            const releasesConfigFile = 'releases.json';
            const releasesConfig = require(`./${releasesConfigFile}`);
            // find environment and set version to releaseVersion
            const envsToUpdate = newlyCheckedEnvs.map(env => env.env.toLowerCase());
            console.log('Environments to update:', envsToUpdate);
            console.log('Releases config before update:', releasesConfig);
            const oldReleasesConfig = { ...releasesConfig };
            envsToUpdate.forEach(env => {
              if (releasesConfig[env]) {
                releasesConfig[env] = releaseVersion;
              }
            });
            // Write the updated config back to the file
            const fs = require('fs');
            fs.writeFileSync(releasesConfigFile, JSON.stringify(releasesConfig, null, 2));
            console.log('Updated releases config:', releasesConfig);
            if (JSON.stringify(oldReleasesConfig) === JSON.stringify(releasesConfig)) {
              console.log('No changes made to releases config.');
              return;
            }
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4.0.0
        with:
          title: 'Update releases config'
          body: 'This pull request updates the releases config file with the new release version.'
          base: main
          commit-message: 'Update releases config'
          branch: update-releases-config