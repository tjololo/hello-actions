name: Promote release from issue comment

on:
  issues:
    types: [edited]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  promote-release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Release:')
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Promote release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: update-release
        with:
          script: |
            const releaseTag = context.payload.issue.title.split(': ')[1];
            const versionRegex = /(.*?)-v(\d+\.\d+\.\d+)/;
            const match = releaseTag.match(versionRegex);
            if (!match) {
              console.log('No version found in release tag:', releaseTag);
              return;
            }
            const releaseName = match[1];
            const releaseVersion = match[2];
            core.setOutput('release-name', releaseName);
            core.setOutput('release-version', releaseVersion);
            console.log('Release version:', releaseVersion);
            
            const currentState = context.payload.issue.body;
            // find the checkboxes in the issue body starting with <!-- start-env-list --> and ending with <!-- stop-env-list -->
            const startEnvList = currentState.indexOf('<!-- start-env-list -->');
            const stopEnvList = currentState.indexOf('<!-- stop-env-list -->');
            const envList = currentState.substring(startEnvList + 23, stopEnvList);
            const envListLines = envList.split('\n').map(line => line.trim());
            const lineRegex = /- \[([ x])\] Deploy to (.+)$/;
            const envListCheckboxes = envListLines.map(line => {
              const match = line.match(lineRegex);
              if (match) {
                const checked = match[1] === 'x';
                const env = match[2];
                return { env, checkbox: checked };
              }
              return null;
            }).filter(Boolean);
            // Update releases config file and create new Pull Request
            const releasesConfigFile = `releases/${releaseName}.json`;
            const releasesConfig = require(`./${releasesConfigFile}`);
            // Update environments in releases config file
            envListCheckboxes.forEach(env => {
              if (env.checkbox) {
                const envName = env.env.toLowerCase();
                releasesConfig[envName] = releaseVersion;
              }
            });

            // Write the updated config back to the file
            const fs = require('fs');
            fs.writeFileSync(releasesConfigFile, JSON.stringify(releasesConfig, null, 2));
            console.log('Updated releases config:', releasesConfig);
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          title: 'Update releases config for ${{ steps.update-release.outputs.release-name }} to ${{ steps.update-release.outputs.release-version }}'
          body: 'This pull request updates the releases config file with the new release version.'
          base: main
          commit-message: 'Update releases config for ${{ steps.update-release.outputs.release-name }} to ${{ steps.update-release.outputs.release-version }}'
          branch: update-releases-config-${{ steps.update-release.outputs.release-name }}-${{ steps.update-release.outputs.release-version }}