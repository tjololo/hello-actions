name: Test composite
description: Tun a composite pipeline
inputs:
  working_directory:
    description: The directory where the Terraform project is located.
    default: ./TestData
    required: true
  test_input:
    description: test input
    default: test
    required: true
  gh_token:
    description: GitHub Token
    required: true

runs:
  using: composite
  steps:
    - name: Generate output
      id: plan
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "out=LoremIpsum osv..." >> $GITHUB_OUTPUT
    - name: generate random delimiter
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: echo "DELIMITER=$(uuidgen)" >> $GITHUB_ENV
    - name: truncate output
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        plan=$(cat <<${{ env.DELIMITER }}
        ${{ format('{0}', steps.plan.outputs.out) }}
        ${{ env.DELIMITER }}
        )
        plan=$(echo "${plan}" | grep -v 'Refreshing state')
        echo "PLAN<<${{ env.DELIMITER }}" >> $GITHUB_ENV
        echo '[maybe truncated]' >> $GITHUB_ENV
        tail --bytes=10000 <<'${{ env.DELIMITER }}' >> $GITHUB_ENV
        ${plan}
        ${{ env.DELIMITER }}
        echo >> $GITHUB_ENV
        echo "${{ env.DELIMITER }}" >> $GITHUB_ENV

    - name: Terraform Summary
      id: action_summary
      if: always()
      env:
        VALIDATE_OUTPUT: ${{ steps.validate.outputs.stdout }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.gh_token }}
        script: |
          // 1. Prep the output
          const output = `# Summary
          \`\`\`\n
          ${{ env.PLAN }}
          \`\`\`
          Testing a summary`;
          console.log("test");
          // 2. Set the output variable
          const fs = require('fs');
          fs.writeFileSync('${{ inputs.working_directory }}/summary.md', output);
          core.setOutput('summary', output);
    - name: Write the step summary
      if: always()
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: cat summary.md >> $GITHUB_STEP_SUMMARY